-- Yellow Taxi Mini Project

CREATE OR REPLACE TRANSIENT TABLE TECHCATALYST_DE.SPATTURI.YELLOW_TAXI (
    VENDORID NUMBER(38,0),
    TPEP_PICKUP_DATETIME TIMESTAMP,
    TPEP_DROPOFF_DATETIME TIMESTAMP,
    YEAR_SERVICE NUMBER,
    MONTH_SERVICE NUMBER,
    PASSENGER_COUNT NUMBER(38,0),
    TRIP_DISTANCE FLOAT,
    RATECODEID NUMBER(38,0),
    STORE_AND_FWD_FLAG VARCHAR(1),
    PULOCATIONID NUMBER(38,0),
    DOLOCATIONID NUMBER(38,0),
    PAYMENT_TYPE NUMBER(38,0),
    FARE_AMOUNT FLOAT,
    EXTRA FLOAT,
    MTA_TAX FLOAT,
    TIP_AMOUNT FLOAT,
    TOLLS_AMOUNT FLOAT,
    IMPROVEMENT_SURCHARGE FLOAT,
    TOTAL_AMOUNT FLOAT,
    CONGESTION_SURCHARGE FLOAT,
    AIRPORT_FEE FLOAT,
    MONTH_FILE VARCHAR(10) -- or DATE column depending on your needs
);

INSERT INTO TECHCATALYST_DE.SPATTURI.YELLOW_TAXI(VENDORID, TPEP_PICKUP_DATETIME,TPEP_DROPOFF_DATETIME,PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, MONTH_FILE)
SELECT VENDORID, TO_TIMESTAMP_NTZ(TPEP_PICKUP_DATETIME, 6), TO_TIMESTAMP_NTZ(TPEP_DROPOFF_DATETIME, 6), PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, '2024_01' FROM TECHCATALYST_DE.PUBLIC.YELLOW_TAXI_2024_01;

INSERT INTO TECHCATALYST_DE.SPATTURI.YELLOW_TAXI(VENDORID, TPEP_PICKUP_DATETIME,TPEP_DROPOFF_DATETIME,PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, MONTH_FILE)
SELECT VENDORID, TO_TIMESTAMP_NTZ(TPEP_PICKUP_DATETIME, 6), TO_TIMESTAMP_NTZ(TPEP_DROPOFF_DATETIME, 6), PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, '2024_02' FROM TECHCATALYST_DE.PUBLIC.YELLOW_TAXI_2024_02;

INSERT INTO TECHCATALYST_DE.SPATTURI.YELLOW_TAXI(VENDORID, TPEP_PICKUP_DATETIME,TPEP_DROPOFF_DATETIME,PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, MONTH_FILE)
SELECT VENDORID, TO_TIMESTAMP_NTZ(TPEP_PICKUP_DATETIME, 6), TO_TIMESTAMP_NTZ(TPEP_DROPOFF_DATETIME, 6), PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, '2024_03' FROM TECHCATALYST_DE.PUBLIC.YELLOW_TAXI_2024_03;

INSERT INTO TECHCATALYST_DE.SPATTURI.YELLOW_TAXI(VENDORID, TPEP_PICKUP_DATETIME,TPEP_DROPOFF_DATETIME,PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, MONTH_FILE)
SELECT VENDORID, TO_TIMESTAMP_NTZ(TPEP_PICKUP_DATETIME, 6), TO_TIMESTAMP_NTZ(TPEP_DROPOFF_DATETIME, 6), PASSENGER_COUNT,TRIP_DISTANCE,RATECODEID,STORE_AND_FWD_FLAG,PULOCATIONID,DOLOCATIONID,PAYMENT_TYPE,FARE_AMOUNT,EXTRA,MTA_TAX,TIP_AMOUNT,TOLLS_AMOUNT,IMPROVEMENT_SURCHARGE,TOTAL_AMOUNT,CONGESTION_SURCHARGE,AIRPORT_FEE, '2024_04' FROM TECHCATALYST_DE.PUBLIC.YELLOW_TAXI_2024_04;

UPDATE TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
set MONTH_SERVICE = MONTH(TPEP_PICKUP_DATETIME);

UPDATE TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
set YEAR_SERVICE = YEAR(TPEP_PICKUP_DATETIME);

-- Task 2: 
SELECT MONTH_FILE, COUNT(*) AS total_trips, SUM(FARE_AMOUNT) AS TOTAL_FARE_AMOUNT
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
GROUP BY MONTH_FILE;

select vendorid, COUNT(*) as "Count"
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
GROUP BY vendorid;


select pulocationid, COUNT(*) as "Count"
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
GROUP BY pulocationid
ORDER BY pulocationid asc;

select payment_type, count(*) as "Count"
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
group by payment_type
order by payment_type asc;

select * 
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
WHERE vendorid is NULL;

SELECT substr(to_char(tpep_pickup_datetime),1,7) as "Period", COUNT(*) FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
group by "Period";

-- Task 3:
SELECT payment_type, AVG(fare_amount) as average_fare_amount
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
group by payment_type;
with cte as(

    SELECT *, 
           CASE
                WHEN TIP_AMOUNT > 0  THEN 1
                WHEN TIP_AMOUNT = 0  THEN 0
           END AS "Tip"
    FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
)
select MONTH_FILE, (SUM("Tip") / COUNT(*)) * 100 AS percentage_with_tips
FROM cte
GROUP BY MONTH_FILE;

SELECT MONTH_FILE, 
DAY(TPEP_PICKUP_DATETIME) AS SERVICE_DAY_OF_MONTH,
SUM(SUM(FARE_AMOUNT)) OVER(PARTITION BY MONTH_FILE ORDER BY SERVICE_DAY_OF_MONTH) AS CUMULATIVE_FARE
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI
GROUP BY MONTH_FILE, SERVICE_DAY_OF_MONTH
ORDER BY MONTH_FILE, SERVICE_DAY_OF_MONTH;

-- Task 4:
SELECT * FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI;
-- drop columns VENDORID, RATECODEID

CREATE VIEW TECHCATALYST_DE.SPATTURI.v_yellow_tripdata as
SELECT
           CASE
                WHEN VENDORID = 1 THEN 'Creative Mobile'
                WHEN VENDORID = 2 THEN 'VeriFone'
           END AS vendor_name,
           tpep_pickup_datetime,
           tpep_dropoff_datetime,
           year_service,
           month_service,
           passenger_count,
           trip_distance,
           CASE
                WHEN RATECODEID = 1 THEN 'Standard Rate'
                WHEN RATECODEID = 2 THEN 'JFK'
                WHEN RATECODEID = 3 THEN 'Newark'
                WHEN RATECODEID = 4 THEN 'Nassau/Westchester'
                WHEN RATECODEID = 5 THEN 'Negotiated Fare'
                WHEN RATECODEID = 6 THEN 'Group Ride'
                WHEN RATECODEID = 99 THEN 'Special Rate'
                ELSE 'No Data'
           END AS rate_type,
           store_and_fwd_flag,
           pulocationid,
           dolocationid,
           CASE
                WHEN payment_type = 1 THEN 'Credit Card'
                WHEN payment_type = 2 THEN 'Cash'
                WHEN payment_type = 3 THEN 'No Charge'
                WHEN payment_type = 4 THEN 'Dispute'
                WHEN payment_type = 5 THEN 'Unknown'
                WHEN payment_type = 6 THEN 'Voided Trip'
                ELSE 'No Data'
           END AS new_payment_type,
           fare_amount, 
           extra,
           mta_tax,
           tip_amount,
           tolls_amount,
           improvement_surcharge,
           total_amount,
           congestion_surcharge,
           airport_fee,
           month_file
FROM TECHCATALYST_DE.SPATTURI.YELLOW_TAXI;
SELECT * FROM TECHCATALYST_DE.SPATTURI.v_yellow_tripdata;

CREATE VIEW TECHCATALYST_DE.SPATTURI.fin_v_yellow_tripdata AS
SELECT * 
from TECHCATALYST_DE.SPATTURI.v_yellow_tripdata
where vendor_name = 'VeriFone' and new_payment_type = 'Credit Card';

SELECT * FROM TECHCATALYST_DE.SPATTURI.fin_v_yellow_tripdata;

SELECT * FROM INS_ACCIDENTS;


